const menu = {
    tako: [
        {
            name: 'üåÆ',
            time: 3000
        },
        {
            name: 'üçü',
            time: 750
        },
        {
            name: 'ü•§',
            time: 500
        },
    ],
    pizza: [
        {
            name: 'üçï',
            time: 3500
        },
        {
            name: 'üçü',
            time: 2850
        },
        {
            name: 'ü•§',
            time: 500
        },
    ],
    meat: [
        {
            name: 'üçñ',
            time: 3000
        },
        {
            name: 'üçó',
            time: 2850
        },
    ]
}


function order(menuName) {
    return new Promise(function(resolve, reject){
        const result = [];

        function cooking({ name, time }, index) {
            const condition = +Math.random().toFixed();
            setTimeout(() => {
                if (condition) {
                    result[index] = name;
                    if (menuName.length === result.filter(Boolean).length) {
    
                        return resolve(result);
                    }
    

                } else {
                    return reject(new Error('shit happens')) ;
                }

            }, time);
    }
    
    menuName.forEach(cooking); 
    })
}

const first = order(menu.tako);
const second = order(menu.pizza);
const third = order(menu.meat);
const fourth = order(menu.pizza);

Promise.allSettled([first, second, third, fourth])
.then(result => {
function status(result) {
    let val = false
// –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–µ–º, —á—Ç–æ –±—ã –≤—ã–±—Ä–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –∂ —É result'a 'fullfield', —á—Ç–æ –±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å if > 3 => true, –Ω–µ –∑–Ω–∞—é, –ø–æ–ª –¥–Ω—è –Ω–∞–¥ —ç—Ç–∏–º –æ—Ç—Å–∏–¥–µ–ª, –Ω–µ —Ç–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –Ω–µ —Ç–æ –∑–Ω–∞–Ω–∏–π, –Ω–µ —Ç–æ –º–æ–∑–≥–æ–≤) –º–± —Ç—ã –¥–∞—à —Ñ–∏–¥–±—ç–∫ –∏ —è —á—Ç–æ-—Ç–æ –ø–æ–π–º—É
    result.forEach((el, index) => {
        // let stat = result[index].status

        console.log(result[index].status)
        if (result[index].status === 'fullfield') {
            return  val = true
        } 
    })
    return val
}
console.log({finished: `${status(result)}`, order: result})
})
.catch(error => {
console.log(error.message)
})
//  –∞ –º–± –≤–æ–æ–±—â–µ –≤—Å–µ –∫—Ä–∏–≤–æ —Å–¥–µ–ª–∞–Ω–æ –∏ –Ω–∞–¥–æ –±—ã–ª–æ –ø–æ-–¥—Ä—É–≥–æ–º—É... –Ω—É –∫—Ä—á..